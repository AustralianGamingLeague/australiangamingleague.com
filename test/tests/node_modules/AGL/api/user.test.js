'use strict';

var assert         = require('chai').assert;
var mockery        = require('mockery');
var sinon          = require('sinon');

describe('api/user', function () {

	// Module

	var userApi = null;

	// Test Data

	// Mocks

	var userFactoryMock = {};
	var userRepositoryMock = {};

	// Setup

	before(function () {
		mockery.enable({ useCleanCache: true });
		mockery.registerMock('AGL/user/factory', userFactoryMock);
		mockery.registerMock('AGL/user/repository', userRepositoryMock);
		mockery.registerAllowable('validate.js');
		mockery.registerAllowable('AGL/api/user');
		userApi = require('AGL/api/user');
	});

	beforeEach(function () {
	});

	// Teardown

	after(function () {
		mockery.deregisterAll();
		mockery.resetCache();
		mockery.disable();
	});

	// Tests

	describe('CreateUser()', function () {

		it.skip('should return correct username on successful creation', function () {
		});

		it.skip('should return an array of errors when validation fails', function () {
		});

		it.skip('should return an array of errors when insertion fails', function () {
		});

	});

	describe.skip('GetUser()', function () {

		it.skip('should return an object of correct user properties', function () {
		});

		it.skip('should return an array of errors when user cannot be found', function () {
		});

	});

});
