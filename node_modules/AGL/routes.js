"use strict";
//==============================================================================
//  Modules
//==============================================================================

var constants   = require('AGL/api/constants');
var userAPI     = require('AGL/api/user');

//==============================================================================
//  Exports
//==============================================================================

module.exports = function(app) {

    // API routes

    app.get('/api/test', function(request, response) {
        response.json("This is just a test.");
    });

    UserAPIRoutes(app);

    // Front end routes

    app.get('*', function(request, response) {
        response.sendFile('index.html', {'root' : './public'});
    });
};

//==============================================================================
//  User API
//==============================================================================

function UserAPIRoutes(app) {

    // TODO Read up on RESTful APIs before going further. eg. This should be a POST, not GET.
    // TODO Read up on good response codes to use.
    // TODO This block is pretty generic, encapsulate this into it's own function.
    app.get('/api/user', function(request, response) {
        var properties = {};
        userAPI.CreateUser(properties, function UserCreated(error, data) {
            var APIResponse;
            if (error) {
                APIResponse = NewAPIResponse(constants.FAILURE, error, null);
            }
            else {
                APIResponse = NewAPIResponse(
                    constants.SUCCESS,
                    "Successfully created new user [" + data.publicUserId + "].",
                    data
                );
            }
            response.json(APIResponse);
        });
    });

}

//==============================================================================
//  API Response
//==============================================================================

function NewAPIResponse(responseCode, message, data) {
    return {
        responseCode    : responseCode,
        message         : message,
        data            : data,
    };
}
