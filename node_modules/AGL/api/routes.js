/*
 *  @file Entry point for all AGL APIs
 *  @author Matt Lambert
 */

'use strict';
//==============================================================================
//  Modules
//==============================================================================

var validate    = require('validate.js');

var userAPI     = require('AGL/api/user');

//==============================================================================
//  Exports
//==============================================================================

module.exports = function (app) {

	// API routes

	UserAPIRoutes(app);

	// Front end routes

	app.get('*', function (request, response) {
		response.sendFile('index.html', {'root' : './public'});
	});
};

//==============================================================================
//  Private Functions
//==============================================================================

// Handles the response for all APIs.

function HandleResponse (errors, data, response) {
	if (!validate.isArray(errors)) {
		throw new Error('errors argument must be an array');
	}
	if (!validate.isDefined(response) || !validate.isObject(response)) {
		throw new Error('must pass response object to HandleResponse function')
	}

	var response;
	if (errors.length > 0) {
		response = {
			success : false,
			errors : errors
		}
	}
	else {
		response = {
			success : true,
			data : data
		}
	}
	response.json(response);
}

//==============================================================================
//  User API
//==============================================================================

function UserAPIRoutes(app) {

	app.post('/api/users', function (request, response) {

		userAPI.CreateUser({
			username     : request.body.username,
			passwordHash : request.body.passwordHash,
			email        : request.body.email,
		},
		function UserCreated (errors, username) {
			return HandleResponse(errors, username, response);
		});

	});

	app.get('/api/users', function (request, response) {

		return HandleResponse(['api not implemented yet.'], undefined, response);

	});

	app.get('/api/users/:searchValue', function (request, response) {

		userAPI.GetUser(request.params.searchValue,
		function UserReturned (errors, userProperties) {
			return HandleResponse(errors, userProperties, response);
		});

	});

}

