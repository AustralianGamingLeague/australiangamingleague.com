/*
 *  @file Handles logic for the user API
 *  @author Matt Lambert
 */

'use strict';
//==============================================================================
//  Modules
//==============================================================================

var userFactory     = require('AGL/user/factory');
var userRepository  = require('AGL/user/repository');

//==============================================================================
//  Public Functions
//==============================================================================

// TODO DOCO
module.exports.CreateUser = function (properties, callback) {
    if (typeof callback !== 'function') {
        throw new Error("Callback argument must be a function.");
    }

    var user = userFactory.BuildUser()
        .SetPublic_id('hj3ugv3a')
        .SetUsername(properties.username)
        .SetPassword(properties.password)
        .SetEmail(properties.email)
        .OnValidationErrors( function HandleValidationErrors (errors) {
            return callback(errors);
        })
        .Build();

    userRepository.SaveUser(user, function UserSaved (error, public_id) {
        if (error) {
            return callback([error]);
        }
        else {
            return callback(null, public_id);
        }
    });

};

// TODO
module.exports.GetUser = function (args, callback) {
    if (typeof callback !== 'function') {
        throw new Error("Callback argument must be a function.");
    }

    var public_id = args.public_id;
    userRepository.GetUser(public_id, callback);
};

//==============================================================================
//  Private Functions
//==============================================================================

