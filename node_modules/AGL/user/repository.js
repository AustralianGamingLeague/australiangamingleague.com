/*
 *   @file Responsible for saving, updating, and deleting user objects to/from the database.
 *   @author Matt Lambert
 */

'use strict';
//==============================================================================
//  Modules
//==============================================================================

var dbAccessor  = require('AGL/database/dbAccessor');
var userFactory = require('AGL/user/factory');
var validate    = require('validate.js');

//==============================================================================
//  Constants
//==============================================================================

var TABLE_NAME = 'users';

//==============================================================================
//  Public Functions
//==============================================================================

/* 
 *  public undefined SaveUser(user, callback)
 *
 *  Saves a new or existing user to the database.
 *  Returns the user's public id to the callback if save is successfull.
 *
 *  @param {object} user object, generated from a factory.
 *  @param {function} callback
 */
module.exports.SaveUser = function (user, callback) {
	if (!validate.isFunction(callback)) {
		throw new Error('callback argument must be a function.');
	}

};

/* public undefined GetUser(public_id, callback)
 *
 *  Gets a user from the database based on public_id.
 *  Returns a user object to the callback if succussfull.
 *
 *  @param {string} public id - users public id
 *  @param {function} callback
 */
module.exports.GetUser = function (publicId, callback) {
	if (!validate.isFunction(callback)) {
		throw new Error('callback argument must be a function.');
	}

};

//==============================================================================
//  Private Functions
//==============================================================================

