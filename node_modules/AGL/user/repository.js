'use strict';
//==============================================================================
//  Modules
//==============================================================================

var dbAccessor = require('AGL/database/db_accessor');

//==============================================================================
//  Constants
//==============================================================================

var TABLE_NAME = 'users';

//==============================================================================
//  Public Functions
//==============================================================================

// public undefined NewUser(properties, callback)
//
//  Saves a new user to the database.
//  Arugments to the callback: callback(error, rows).
//  On success, will return callback(null, rows).
//  On error, will return callback(error, null).
//
//  @param {object} properties required for a user.
//  @param {function} callback
//
module.exports.NewUser = function (properties, callback) {
    if (typeof callback !== 'function') {
        throw ("Callback argument must be a function.");
    }

    // TODO Validate properties
    // If validation fails send an error message in callback

    var knex = dbAccessor.GetQueryBuilder();

    knex(TABLE_NAME).insert({
        PUBLIC_ID   : properties.public_id,
        USERNAME    : properties.username,
        PASSWORD    : properties.password,
        EMAIL       : properties.email,
    }).asCallback(callback); // TODO possibly write function here instead of directly calling callback. Depends on what the data from the DB looks like.

};

//==============================================================================
//  Private Functions
//==============================================================================

